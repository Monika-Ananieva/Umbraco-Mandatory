@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.Members>
@using Umbraco.Core.Services;
@{
    IMemberService memberService = Services.MemberService;
    var members = memberService.GetMembersByGroup("Active");
}
@using ContentModels = Umbraco.Web.PublishedModels;
@{
    Layout = "Master.cshtml";
}

@*<div class="members">

    @foreach (var member in members)
    {
        string imageUdi = member.GetValue<string>("photo");

        if (!string.IsNullOrEmpty(imageUdi))
        {
            string imageUrl = Umbraco.PublishedContent(Udi.Parse(imageUdi)).Url;

            <img src="@imageUrl" class="rounded-circle" />
        }

        <p>
            @member.Name <br>
            @member.GetValue("address")<br>
            @member.GetValue("zip")
            @member.GetValue("city") <br>
            Email: @member.Email<br>
        </p>

        if (member.GetValue("skills") != null)
        {
            string[] skills = member.GetValue("skills").ToString().Split(',');
            string skillString = string.Join(", ", skills.Select(item => item)).Replace("\"", "").TrimStart('[').TrimEnd(']');
            <span>@skillString</span>
        }
    }

</div>*@

<div class="container-fluid members">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="generic-headline">Members</h1>
            <p class="generic-p">Here you can see our active members and find some information about them</p>
        </div>
    </div>
    <div class="row">
        @foreach (var member in members)
        {
            string imageUdi = member.GetValue<string>("photo");
            <div class="col-xl-3 col-lg-4 col-md-6 col-sm-6">
                <div class="member-big-box">
                    <div class="member-top-box"></div>

                    <div class="member-image">
                        @if (!string.IsNullOrEmpty(imageUdi))
                        {
                            string imageUrl = Umbraco.PublishedContent(Udi.Parse(imageUdi)).Url;

                            <img src="@imageUrl" class="rounded-circle" />
                        }
                    </div>

                    <div class="content-address">
                        <h1>@member.Name</h1>
                        <p>@member.GetValue("address")</p>
                        <p>
                            @member.GetValue("zip") @member.GetValue("city")
                        </p>
                        <p>@member.Email</p>
                    </div>

                    <div class="member-bottom-box">
                        <div class="content-skills">
                            <h1>Skills</h1>
                            @if (member.GetValue("skills") != null)
                            {
                                string[] skills = member.GetValue("skills").ToString().Split(',');
                                string skillString = string.Join(", ", skills.Select(item => item)).Replace("\"", "").TrimStart('[').TrimEnd(']');
                                <p>@skillString</p>
                            }

                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>